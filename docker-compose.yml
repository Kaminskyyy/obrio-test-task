version: '3.8'
services:
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notifications-app-notification-service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: notifications-app-user-service
    restart: always
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: notifications-app-rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmqctl status']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

  postgres:
    image: postgres
    container_name: notifications-app-database
    restart: always
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=notifications-app
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 6000:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

  redis:
    image: redis/redis-stack
    container_name: notifications-app-redis
    restart: always
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - ./redis-data/d–∞ta:/root/redis
      - ./redis-data/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=admin
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

volumes:
  notifications-pg-data:
